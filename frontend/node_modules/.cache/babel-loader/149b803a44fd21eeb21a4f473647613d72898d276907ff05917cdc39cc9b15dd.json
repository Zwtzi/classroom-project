{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\"; // Usa variable de entorno o localhost\n\n// 🟢 Función para registrar usuario\nexport const registerUser = async userData => {\n  const response = await fetch(`${API_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Error en el registro\");\n  }\n  return response.json();\n};\n\n// 🟢 Función para iniciar sesión\nexport const login = async credentials => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    // Corregido: Agregado `/auth`\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!response.ok) {\n    throw new Error(\"Error en el inicio de sesión\");\n  }\n  return response.json();\n};\n\n// 🟢 Función para obtener clases\nexport const fetchClases = async () => {\n  try {\n    const response = await fetch(`${API_URL}/classes`);\n    if (!response.ok) {\n      throw new Error(\"Error al obtener las clases\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error en fetchClases:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","login","credentials","fetchClases","error","console"],"sources":["/home/z/classroom-project/frontend/src/api/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\"; // Usa variable de entorno o localhost\n\n// 🟢 Función para registrar usuario\nexport const registerUser = async (userData) => {\n    const response = await fetch(`${API_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n        throw new Error(\"Error en el registro\");\n    }\n\n    return response.json();\n};\n\n// 🟢 Función para iniciar sesión\nexport const login = async (credentials) => {\n    const response = await fetch(`${API_URL}/auth/login`, { // Corregido: Agregado `/auth`\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n    });\n\n    if (!response.ok) {\n        throw new Error(\"Error en el inicio de sesión\");\n    }\n\n    return response.json();\n};\n\n// 🟢 Función para obtener clases\nexport const fetchClases = async () => {\n    try {\n        const response = await fetch(`${API_URL}/classes`);\n        if (!response.ok) {\n            throw new Error(\"Error al obtener las clases\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error en fetchClases:\", error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,CAAC,CAAC;;AAE1E;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,gBAAgB,EAAE;IACrDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EACjC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxC,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,aAAa,EAAE;IAAE;IACpDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;EACpC,CAAC,CAAC;EAEF,IAAI,CAACX,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACnD;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,UAAU,CAAC;IAClD,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}